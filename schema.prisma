generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Team {
  id          String @id @default(cuid())
  name        String
  description String
  sessions    Session[]
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id           String @id @default(cuid())
  name         String
  email        String @unique
  hash         String // (password hash w/ bcrypt)
  teams        Team[]
  tokens       UserToken[]
  lastOpenedId String?
  messages     Message[]
}

model Session {
  id          String @id @default(cuid())
  token       String
  teamId      String
  status      String @default("open") // open or closed
  createdAt   DateTime @default(now())
  closedAt    DateTime?

  team        Team @relation(fields: [teamId], references: [id])
  messages    Message[]
}

model Message {
  id          String @id @default(cuid())
  content     String
  read        Boolean @default(false)
  createdAt   DateTime @default(now())

  sessionId   String
  session     Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  senderId    String?
  sender      User?    @relation(fields: [senderId], references: [id])
}

model UserToken {
  token       String @id
  method      String @default("auth")
  expiresAt   DateTime? // null means never expires

  userId      String
  user        User   @relation(fields: [userId], references: [id])
}